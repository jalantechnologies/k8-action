name: 'analyze'
description: 'Run code analyzer using SonarQube'
inputs:
  sonar_host_url:
    required: true
    description: 'SonarQube server URL'
  sonar_token:
    required: true
    description: 'The authentication token or login of a SonarQube user'
  branch:
    required: true
    description: 'Branch from which this workflow was run'
  branch_base:
    required: false
    description: 'This refers to the base branch against with sonarqube will run code analysis'
  pull_request_number:
    required: false
    description: 'Pull request number running the workflow against a pull request'
runs:
  using: composite
  steps:
    - name: sonarqube-scan-branch
      uses: sonarsource/sonarqube-scan-action@master
      if: inputs.pull_request_number
      with:
        args: >
          -Dsonar.host.url=${{ inputs.sonar_host_url }}
          -Dsonar.login=${{ inputs.sonar_token }}
          -Dsonar.pullrequest.key=${{ inputs.pull_request_number }}
          -Dsonar.pullrequest.branch=$(echo ${{ inputs.branch }} | sed -e 's/^refs\/heads\///g')
          -Dsonar.pullrequest.base=$(echo ${{ inputs.branch_base }} | sed -e 's/^refs\/heads\///g')
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=5

    - name: sonarqube-scan-branch
      uses: sonarsource/sonarqube-scan-action@master
      if: inputs.pull_request_number == ''
      with:
        args: >
          -Dsonar.host.url=${{ inputs.sonar_host_url }}
          -Dsonar.login=${{ inputs.sonar_token }}
          -Dsonar.branch.name=$(echo ${{ inputs.branch }} | sed -e 's/^refs\/heads\///g')
