name: 'Deploys application'
description: 'Deploys application to Kubernetes'
inputs:
  app_name:
    description: 'Application name (unique for every repo)'
    required: true
  app_namespace:
    description: 'Application namespace (unique for every deployment environments)'
    required: true
  app_environment:
    description: 'Environment for the application (preview / production)'
    required: true
  app_hostname:
    description: 'Host from where deployment can be accessed'
    required: true
  branch:
    description: 'Branch against which the deployment is being done'
    required: true
  docker_registry:
    description: 'Registry to used for pushing docker images'
    required: true
  docker_repository:
    description: 'Repository name on provided docker registry where image will be pushed'
    required: true
  docker_username:
    description: 'Username for docker registry'
    required: true
  docker_password:
    description: 'Password for docker registry'
    required: true
  doppler_token:
    description: 'Access token for access Doppler'
    required: true
  do_access_token:
    description: 'Access token for accessing Digital Ocean'
    required: true
  do_cluster_id:
    description: 'Cluster ID on Digital Ocean'
    required: true
outputs:
  url:
    description: 'URL from where deployment can be accessed'
    value: ${{ steps.eks_deploy.outputs.url }}
runs:
  using: 'composite'
  steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ inputs.do_access_token }}

    - name: Setup Kubernetes
      shell: bash
      env:
        DO_CLUSTER_ID: ${{ inputs.do_cluster_id }}
      run: doctl kubernetes cluster kubeconfig save $DO_CLUSTER_ID

    - name: Install doppler
      uses: dopplerhq/cli-action@v1

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: myappartifact
        path: /tmp

    - name: Extract branch name
      id: extract_branch
      uses: ./.github/actions/branch-id
      with:
        branch: ${{ inputs.branch }}

    - name: Push docker image
      shell: bash
      id: docker_image
      env:
        DOCKER_REGISTRY: ${{ inputs.docker_registry }}
        DOCKER_REPOSITORY: ${{ inputs.docker_repository }}
        DOCKER_USERNAME: ${{ inputs.docker_username }}
        DOCKER_PASSWORD: ${{ inputs.docker_password }}
        IMAGE_TAG: ${{ steps.extract_branch.outputs.branch_id }}
      run: |
        IMAGE_NAME=$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG

        docker login $DOCKER_REGISTRY --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker load --input /tmp/myappimage.tar
        docker tag ${{ inputs.app_name }} $IMAGE_NAME
        docker push $IMAGE_NAME

        echo "##[set-output name=name;]$(echo $IMAGE_NAME)"

    - name: Extract pull request number
      id: extract_pr_number
      uses: jwalton/gh-find-current-pr@v1

    - name: Deploy to EKS
      shell: bash
      id: eks_deploy
      env:
        DOPPLER_PROJECT: ${{ inputs.app_name }}
        DOPPLER_CONFIG: ${{ inputs.app_environment }}
        DOPPLER_TOKEN: ${{ inputs.doppler_token }}
        KUBE_NS: ${{ inputs.app_namespace }}
        KUBE_APP: ${{ inputs.app_namespace }}-${{ steps.extract_branch.outputs.branch_id }}
        KUBE_ENV: ${{ inputs.app_environment }}
        KUBE_DEPLOYMENT_IMAGE: ${{ steps.docker_image.outputs.name }}
        KUBE_INGRESS_HOSTNAME: ${{ steps.extract_branch.outputs.branch }}.${{ inputs.app_hostname }}
      run: |
        source deploy/kube.sh
        echo "##[set-output name=url;]$(echo https://$KUBE_INGRESS_HOSTNAME)"
