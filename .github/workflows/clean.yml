name: clean

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_env:
        required: true
        type: string
      branch:
        required: true
        type: string
      deploy_root:
        required: false
        type: string
        description: "Directory where kube deployment would look for kubernetes specification files for cleanup"
        default: "lib/kube"
      platform_version:
        required: false
        type: string
        description: "Branch from which platform will be checked out to use actions"
        default: "v2.7"
    secrets:
      docker_registry:
        required: false
      docker_username:
        required: false
      docker_password:
        required: false
      do_access_token:
        required: true
      do_cluster_id:
        required: true

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (source)
        uses: actions/checkout@v3

      - name: Checkout (action)
        uses: actions/checkout@v3
        with:
          repository: jalantechnologies/platform-github
          path: platform
          ref: ${{ inputs.platform_version }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.do_access_token }}

      - name: Setup Kubernetes
        env:
          DO_CLUSTER_ID: ${{ secrets.do_cluster_id }}
        run: doctl kubernetes cluster kubeconfig save $DO_CLUSTER_ID

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${{ inputs.branch }} | sed -e 's/^refs\/heads\///g')
          BRANCH_HASH=$(sha1sum < <(printf '%s' $BRANCH_NAME) | cut -c -15)

          echo "##[set-output name=branch;]$(echo $BRANCH_NAME)"
          echo "##[set-output name=branch_hash;]$(echo $BRANCH_HASH)"

      - name: Clean up - Kube
        env:
          KUBE_ROOT: ${{ inputs.deploy_root }}
          KUBE_NS: ${{ inputs.app_name }}-${{ inputs.app_env }}
          KUBE_APP: ${{ inputs.app_name }}-${{ inputs.app_env }}-${{ steps.extract_branch.outputs.branch_hash }}
          KUBE_ENV: ${{ inputs.app_env }}
        run: |
          source platform/src/scripts/kube/clean.sh

      - name: Clean up - Docker
        env:
          DOCKER_REGISTRY: ${{ secrets.docker_registry }}
          DOCKER_REPOSITORY: ${{ inputs.app_name }}
          DOCKER_USERNAME: ${{ secrets.docker_username }}
          DOCKER_PASSWORD: ${{ secrets.docker_password }}
        if: env.DOCKER_REGISTRY != null && env.DOCKER_USERNAME != null && env.DOCKER_PASSWORD != null
        shell: bash
        run: |
          IMAGE_NAME=$DOCKER_REGISTRY/$DOCKER_REPOSITORY:${{ steps.extract_branch.outputs.branch_hash }}

          docker login $DOCKER_REGISTRY --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          docker image rm $IMAGE_NAME || true
