name: staging

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_hostname:
        required: true
        type: string
      branch:
        required: true
        type: string
      branch_base:
        required: false
        type: string
      pull_request_number:
        required: false
        type: number
      steps:
        required: false
        type: string
    secrets:
      docker_registry:
        required: true
      docker_username:
        required: true
      docker_password:
        required: true
      do_access_token:
        required: true
      do_cluster_id:
        required: true
      doppler_token:
        required: false
      sonar_token:
        required: false
      sonar_host_url:
        required: false

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: inputs.steps == '' || contains(join(inputs.steps), 'analyze')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: sonarqube-scan-branch
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host_url }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ inputs.pull_request_number }}
            -Dsonar.pullrequest.branch=${{ inputs.branch }}
            -Dsonar.pullrequest.base=${{ inputs.branch_base }}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout (action)
        uses: actions/checkout@v2
        with:
          repository: jalantechnologies/platform-github
          path: platform

      - name: Build application
        uses: ./platform/.github/actions/build
        with:
          tag: ${{ inputs.app_name }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.steps == '' || contains(join(inputs.steps), 'lint')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout (action)
        uses: actions/checkout@v2
        with:
          repository: jalantechnologies/platform-github
          path: platform

      - name: Runs lint checks
        uses: ./platform/.github/actions/lint
        with:
          tag: ${{ inputs.app_name }}

  test:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.steps == '' || contains(join(inputs.steps), 'test')
    steps:
      - name: Checkout (action)
        uses: actions/checkout@v2
        with:
          repository: jalantechnologies/platform-github
          path: platform

      - name: Run automated test cases
        uses: ./platform/.github/actions/test

  preview:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.steps == '' || contains(join(inputs.steps), 'preview')
    # make sure to run a single job against the provided branch
    # following will prioritize the most recent invocation and cancel existing ones if any were found
    # important - make sure preview and clean are using same group
    concurrency:
      group: preview-${{ inputs.branch }}
      cancel-in-progress: true
    steps:
      - name: Checkout (source)
        uses: actions/checkout@v2

      - name: Checkout (action)
        uses: actions/checkout@v2
        with:
          repository: jalantechnologies/platform-github
          path: platform

      - name: Deploy built application to Kubernetes
        id: deploy
        uses: ./platform/.github/actions/deploy
        with:
          app_name: ${{ inputs.app_name }}
          app_hostname: ${{ inputs.app_hostname }}
          branch: ${{ inputs.branch }}
          docker_registry: ${{ secrets.docker_registry }}
          docker_username: ${{ secrets.docker_username }}
          docker_password: ${{ secrets.docker_password }}
          do_access_token: ${{ secrets.do_access_token }}
          do_cluster_id: ${{ secrets.do_cluster_id }}
          doppler_token: ${{ secrets.doppler_token }}

      - name: Extract pull request number
        id: extract_pr_number
        uses: jwalton/gh-find-current-pr@v1

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          hide_classify: 'OUTDATED'
          number: ${{ steps.extract_pr_number.outputs.number }}
          message: |
            Preview is available at - ${{ steps.deploy.outputs.url }}

  clean:
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() }}
    # list all jobs after which clean up should be performed
    needs: [ 'lint', 'test', 'preview' ]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: myappartifact
          failOnError: false
